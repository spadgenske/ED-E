/*ED-E Home Automation
copyright 2015 (c) Tyler Spadgenske
GPL v2 License

ED-E Core unit software
 */

#include "ssd1327.h"
#include <ssd1308.h>
#include <sainsmartks.h>
#include <jhd1313m1.h>
#include <eboled.h>
#include "mraa.hpp"
#include <iostream>
#include <unistd.h>

#define DEVICE_ADDRESS    0x3C
#define BUS_NUMBER        0x0

static uint8_t logo[] ={
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x30, 0x00,
		0x00, 0x00, 0x0F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x38, 0x00, 0x00, 0x00, 0x0F, 0x80,
		0x00, 0x00, 0x00, 0x00, 0xF0, 0x30, 0x78, 0x00, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x00, 0x00, 0x00,
		0xF0, 0x78, 0x78, 0x00, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x78, 0x78, 0x00,
		0x00, 0x00, 0x1F, 0x80, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x78, 0x78, 0x00, 0x00, 0x00, 0x1F, 0x80,
		0x00, 0x00, 0x00, 0x00, 0xF0, 0x78, 0x78, 0x00, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x00, 0x00, 0x00,
		0xF0, 0x78, 0x78, 0x00, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x78, 0x78, 0x00,
		0x00, 0x00, 0x0F, 0x80, 0x00, 0x04, 0x00, 0x00, 0xF0, 0x78, 0x78, 0x04, 0x00, 0x00, 0x0F, 0x80,
		0x00, 0x1E, 0x00, 0x00, 0xFF, 0xFF, 0xF8, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x3F, 0x00, 0x00,
		0xFF, 0xFF, 0xF8, 0x1F, 0x80, 0x00, 0x06, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0xFF, 0xF8, 0x1F,
		0xC0, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x3F, 0xFF, 0xF0, 0x1F, 0xE0, 0x00, 0x3F, 0xE0,
		0x01, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x01, 0xFF, 0xF8, 0x03, 0xFC, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x07, 0xF8, 0x07, 0xFF, 0xFF, 0x03, 0xF8, 0x00, 0x00, 0x00, 0x18, 0x00, 0x03,
		0xFC, 0x1F, 0xFF, 0xFF, 0x83, 0xF0, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x01, 0xFC, 0x3F, 0xFF, 0xFF,
		0xC1, 0xE0, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x00, 0xFC, 0x7F, 0xE0, 0x3F, 0xE0, 0x00, 0x00, 0x00,
		0x00, 0x7C, 0x00, 0x00, 0x78, 0xFF, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x00,
		0x01, 0xFE, 0x00, 0x07, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x01, 0xFD, 0xF0, 0x01,
		0xF8, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x03, 0xFB, 0xF0, 0x00, 0xFC, 0x00, 0x00, 0x00,
		0x00, 0x7C, 0x00, 0x00, 0x03, 0xF7, 0xF0, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x00,
		0x07, 0xE7, 0xF0, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x07, 0xEF, 0xE0, 0x00,
		0x3E, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x07, 0xCF, 0xC0, 0x00, 0x3E, 0x00, 0x00, 0x00,
		0x00, 0x7C, 0x00, 0x00, 0x07, 0xCF, 0xC0, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00,
		0x07, 0xCF, 0x80, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x07, 0xDF, 0x80, 0x00,
		0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xDF, 0x80, 0x00, 0x1F, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x07, 0xCF, 0x80, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0x80, 0x00,
		0x07, 0xCF, 0x80, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xE0, 0x00, 0x07, 0xCF, 0xC0, 0x00,
		0x3F, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xF0, 0x00, 0x07, 0xCF, 0xE0, 0x00, 0x3F, 0x00, 0x00, 0x00,
		0x7F, 0xFF, 0xF0, 0xFF, 0xC7, 0xE7, 0xE0, 0x00, 0x3E, 0x1F, 0xFC, 0x00, 0x78, 0x00, 0xF9, 0xFF,
		0xE7, 0xE7, 0xF0, 0x00, 0x7E, 0x1F, 0xFC, 0x00, 0x78, 0x00, 0x79, 0xFF, 0xE3, 0xF3, 0xF0, 0x00,
		0x7E, 0x1F, 0xFC, 0x00, 0xF0, 0x00, 0x78, 0xFF, 0xE3, 0xF9, 0xE0, 0x00, 0x7C, 0x1F, 0xFC, 0x00,
		0xF0, 0x00, 0x78, 0xFF, 0xC1, 0xF8, 0x00, 0x00, 0x78, 0x0F, 0xF8, 0x00, 0xF0, 0x00, 0x78, 0x00,
		0x01, 0xFE, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x78, 0x00, 0x00, 0xFF, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x78, 0x00, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
		0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xF8, 0x00,
		0x00, 0x1F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xF8, 0x00, 0x00, 0x1F, 0x80, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xF8, 0x00, 0x00, 0x1F, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x0F, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0xFF,
		0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x18, 0x00, 0x00, 0x0F, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00,
		0x70, 0x00, 0x3C, 0x00, 0x00, 0x07, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x3C, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x70, 0x3C, 0x00, 0x00, 0x01, 0xFF, 0xF8,
		0x00, 0x00, 0x00, 0x00, 0xF0, 0x78, 0x3C, 0x00, 0x00, 0x03, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00,
		0xF0, 0x78, 0x3C, 0x00, 0x00, 0x03, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x78, 0x3C, 0x00,
		0x00, 0x01, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x78, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0xF0, 0x78, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0xF0, 0x78, 0x7C, 0x00, 0x00, 0x01, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFC, 0x00,
		0x00, 0x03, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x03, 0xFF, 0xFC,
		0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xF8, 0x00, 0x00, 0x01, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00,
		0x3F, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

int
main(int argc, char **argv)
{
	//Item select position
	int pos = 1;
	//Setup GPIO
	mraa::Gpio* down_pin = new mraa::Gpio(4);
	mraa::Gpio* back_pin = new mraa::Gpio(5);
	mraa::Gpio* select_pin = new mraa::Gpio(6);
	mraa::Gpio* up_pin = new mraa::Gpio(7);

	//Set pins to input
	down_pin->dir(mraa::DIR_IN);
	back_pin->dir(mraa::DIR_IN);
	select_pin->dir(mraa::DIR_IN);
	up_pin->dir(mraa::DIR_IN);

	//Setup OLED
	upm::SSD1327 *lcd = new upm::SSD1327(BUS_NUMBER, 0x3C);

	//Draw ED-E logo and main menu text
	lcd->setGrayLevel(12);
	lcd->draw(logo, 96 * 96 / 8);
	lcd->setCursor(9, 0);
	lcd->write(" <VIEW DATA");
	lcd->setCursor(10, 0);
	lcd->write("  SETTINGS");
	lcd->setCursor(11, 0);
	lcd->write("  SHUTDOWN");

	// main loop
		for (;;) {
			sleep(0.9);
			int mode = 0;

			/*Modes
			 * 0 = NULL
			 * 1 = DOWN
			 * 2 = BACK
			 * 3 = SELECT
			 * 4 = UP
			 */
			//Check mode change
			if (mode == 0)
			{
				//Check for down button press
				if (down_pin->read() == 0)
				{
					std::cout << "Down" << std::endl;
					mode = 1;
					pos += 1;
					if (pos == 4)
					{
						pos = 3;
					}
				}
				//check for back button press
				if (back_pin->read() == 0)
				{
					std::cout << "Back" << std::endl;
					mode = 2;
				}
				//check for select button press
				if (select_pin->read() == 0)
				{
					std::cout << "select" << std::endl;
					mode = 3;
				}
				//check for up button press
				if (up_pin->read() == 0)
				{
					std::cout << "up" << std::endl;
					mode = 4;
					pos -= 1;
					if (pos == -1)
					{
						pos = 1;
					}
				}
			}
			//Wait for bounce
			if (mode != 0)
			{
				//Blit cursor at current pos
				if (pos == 1){
					lcd->setCursor(10, 0);
					lcd->write("  ");
					lcd->setCursor(9, 0);
					lcd->write(" <");
				}
				if (pos == 2){
					lcd->setCursor(11, 0);
					lcd->write("  ");
					lcd->setCursor(9, 0);
					lcd->write("  ");
					lcd->setCursor(10, 0);
					lcd->write(" <");
				}
				if (pos == 3){
					lcd->setCursor(10, 0);
					lcd->write("  ");
					lcd->setCursor(11, 0);
					lcd->write(" <");
				}
				//Wait a little then reset
				mode = 0;
			}
		}

	delete lcd;
//! [Interesting]
        return 0;
}
